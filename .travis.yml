language: c
dist: trusty
sudo: true

matrix:
  include:
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-4.9
      env:
         - MATRIX_EVAL="CC=gcc-4.9 && CXX=g++-4.9"

    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-5
      env:
         - MATRIX_EVAL="CC=gcc-5 && CXX=g++-5"

    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-6
      env:
        - MATRIX_EVAL="CC=gcc-6 && CXX=g++-6"

    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-7
      env:
        - MATRIX_EVAL="CC=gcc-7 && CXX=g++-7"

    - os: linux
      addons:
        apt:
          sources:
            - llvm-toolchain-trusty-3.8
          packages:
            - libiomp-dev
            - clang-3.8
      env:
        - MATRIX_EVAL="CC=clang-3.8 && CXX=clang++-3.8"

    - os: linux
      addons:
        apt:
          sources:
            - llvm-toolchain-trusty-3.9
          packages:
            - libiomp-dev
            - clang-3.9
      env:
        - MATRIX_EVAL="CC=clang-3.9 && CXX=clang++-3.9"

    - os: linux
      addons:
        apt:
          sources:
            - llvm-toolchain-trusty-4.0
          packages:
            - libiomp-dev
            - clang-4.0
      env:
        - MATRIX_EVAL="CC=clang-4.0 && CXX=clang++-4.0"

#    - os: linux
#      addons:
#        apt:
#          sources:
#            - llvm-toolchain-trusty-5.0
#          packages:
#            - libiomp-dev
#            - clang-5.0
#      env:
#        - MATRIX_EVAL="CC=clang-5.0 && CXX=clang++-5.0"

env:
  - NO_CUDA=1 NO_OPENMP=1
  - NO_CUDA=1
  - CUDA=7.0-28
  - CUDA=7.5-18
  - CUDA=8.0.61-1

before_install:
  - eval "${MATRIX_EVAL}"
  - if [[ -n ${CUDA} ]]; then travis_retry wget http://developer.download.nvidia.com/compute/cuda/repos/ubuntu1404/x86_64/cuda-repo-ubuntu1404_${CUDA}_amd64.deb; fi
  - if [[ -n ${CUDA} ]]; then travis_retry sudo dpkg -i cuda-repo-ubuntu1404_${CUDA}_amd64.deb; fi
  - if [[ -n ${CUDA} ]]; then travis_retry sudo apt-get update -qq; fi
  - if [[ -n ${CUDA} ]]; then export CUDA_APT=${CUDA:0:3}; fi
  - if [[ -n ${CUDA} ]]; then export CUDA_APT=${CUDA_APT/./-}; fi
  - if [[ -n ${CUDA} ]]; then travis_retry sudo apt-get install -y cuda-core-${CUDA_APT} cuda-cudart-dev-${CUDA_APT}; fi
  - if [[ -n ${CUDA} ]]; then travis_retry sudo apt-get clean; fi
  - if [[ -n ${CUDA} ]]; then export CUDA_HOME=/usr/local/cuda-${CUDA:0:3}; fi
  - if [[ -n ${CUDA} ]]; then export LD_LIBRARY_PATH=${CUDA_HOME}/lib64:${LD_LIBRARY_PATH}; fi
  - if [[ -n ${CUDA} ]]; then export PATH=${CUDA_HOME}/bin:${PATH}; fi

script:
  - eval "${MATRIX_EVAL}"
  - if [[ -z ${CUDA} ]]; then export NO_CUDA=1; fi
  - export
  - ${CC} -v
  - make CC=${CC} NO_OPENMP=${NO_OPENMP} NO_CUDA=${NO_CUDA}
  - ./nbody --bodies 8 --cycle-after 3 --iterations 1

notifications:
  pushover:
    api_key:
      secure: gsUWHn4C8WfV30HUnfUQFYSs9/prNNWI4WnuaHK7g33AnY+XqPM4h0sKfU9Wwlt0Uu13f9LNfIgk9nPnT9UxQoLzkG3uuVNWEQ3r62B76LzeBF9xprxMj/Ju9NP9SPqGnMAotKlAoNgQgrEf2B1hQV5RrLgsu8zdaatdDwLCoiU=
    users:
      secure: P09YDEei2k8LG9eRM/yW075iv9xNhxLpRLVzy8YP8kYhfDmhIFbc4eiYMCCKVxvUm654uWgmBfuQzGYTme+/YIs5D6itEwAu/It2d5TzwPkF743g90anz88bCUWZvfoj29Yd2OmtjJCpad6j6oq00nPqR5Oe/nXI7GfGS0V4p6U=
